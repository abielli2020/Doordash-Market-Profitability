-- 1. Average Earnings Per Hour Spent Dashing by Day of Week
SELECT
    DAYOFWEEK(dash_start_time) AS day_of_week, -- Extract day of the week from the start time
    AVG(total_pay / TIMESTAMPDIFF(HOUR, dash_start_time, dash_end_time)) AS avg_earnings_per_hour
    -- Calculate average earnings per hour for each day of the week
FROM Dash
GROUP BY day_of_week
ORDER BY day_of_week;

-- 2. Number of Dashes and Deliveries for Each Zip Code in Submarket 13
SELECT
    dasher.zipcode,
    COUNT(DISTINCT dash.dash_id) AS number_of_dashes, -- Count the number of unique dashes
    SUM(CASE WHEN dash.total_pay > 0 THEN 1 ELSE 0 END) AS number_of_deliveries
    -- Count deliveries with positive pay (indicating completed deliveries)
FROM Dash
JOIN Dasher ON dash.dasher_id = dasher.id
WHERE dash.submarket_id = 13
GROUP BY dasher.zipcode;

-- 3. Most Efficient Dasher by Deliveries per Time Spent Dashing in October 2017
SELECT
    dash.dasher_id,
    SUM(CASE WHEN dash.total_pay > 0 THEN 1 ELSE 0 END) AS total_deliveries,
    SUM(TIMESTAMPDIFF(MINUTE, dash.dash_start_time, dash.dash_end_time)) / 60 AS total_hours_spent,
    -- Convert time spent to hours
    (SUM(CASE WHEN dash.total_pay > 0 THEN 1 ELSE 0 END) /
     (SUM(TIMESTAMPDIFF(MINUTE, dash.dash_start_time, dash.dash_end_time)) / 60)) AS deliveries_per_hour
FROM Dash
WHERE dash.dash_start_time >= '2017-10-01'
  AND dash.dash_end_time < '2017-11-01'
GROUP BY dash.dasher_id
ORDER BY deliveries_per_hour DESC
LIMIT 1;

-- 4. Percent of Total Pay Generated by Dashers Completing 2+ Deliveries per Hour in October 2017
SELECT
    (SUM(CASE WHEN (total_deliveries / total_hours_spent) >= 2 THEN total_pay ELSE 0 END) /
     SUM(total_pay)) * 100 AS percent_pay_by_efficient_dashers
FROM (
    SELECT
        dash.dasher_id,
        SUM(CASE WHEN dash.total_pay > 0 THEN 1 ELSE 0 END) AS total_deliveries,
        SUM(TIMESTAMPDIFF(MINUTE, dash.dash_start_time, dash.dash_end_time)) / 60 AS total_hours_spent,
        SUM(total_pay) AS total_pay
    FROM Dash
    WHERE dash.dash_start_time >= '2017-10-01'
      AND dash.dash_end_time < '2017-11-01'
    GROUP BY dash.dasher_id
) AS subquery;
